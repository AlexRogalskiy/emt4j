# Copyright (c) 2022 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Apache License, Version 2.0 which is available at
# https://www.apache.org/licenses/LICENSE-2.0.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0
title=The time zone data in JDK 11 changed to CLDR. The output of java.text.DateFormat.format with default style for format in JDK 8 and JDK 11 is inconsistent.
description=Consider the following code: \
DateFormat df = DateFormat.getDateTimeInstance(DateFormat.DEFAULT, DateFormat.DEFAULT); \
System.out.println(df.format(new Date())); \
JDK 8 output: Jan 14,2021 11:17:37 \
JDK 11 output: Jan 14, 2021, 11:16:45 \
There is a space character after the year field, but it's a comma character in JDK 11.
solution=1. Add "-Djava.locale.providers = COMPAT" to the java option to make the default time zone compatible with the time zone data of JDK 8 \
2. Avoid using the default locale when using java.text.DateFormat, but explicitly specify the Locale.